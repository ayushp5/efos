%pylab inline 
import pyIGRF

#these are test values for bVec
bx = 1.0
by = 2.0
bz= 3.0

#these are test values for angRot
ax = 4.0
ay = 5.0 
az = 6.0 

#this is a "mock" k value for test calculations
k = 0.5

#bVec is the instantaneous magnetic field vectors of the Earth
  #this is given by magnetometer 
bVec = [ bx, by ,bz]
  
#bmag is the magnitude of bVec
bmag = (bx**2 + by**2 + bz**2)**(1/2) 

#negAngRot is the angular rotation of the satellite multiplied by -1 
  #this is given by gyroscope
negAngRot = [-ax, -ay, -az] 

#bdot is the time derivative of bmag 
bdot = cross(angrot, bVec)
print("This is the calculated B-Dot vector:  ", bdot)

#this is the function for cross product, but apparently it's unnecessary. python seems to already do it??? 
  #def cross(a, b):
  #  c = [a[1]*b[2] - a[2]*b[1], 
  #       a[2]*b[0] - a[0]*b[2], 
  #       a[0]*b[1] - a[1]*b[0]] 
  #  return c
  
#this is the magnetic dipole we need to generate from the magnetorquers 
magDipole = -1.0*k * bdot
print("This is the magnetic dipole vector:   ", magDipole)
 
 
#This is going to be used to calculate stuff with the M = i * n * s equation
s = 46.0       #S is the surface area enclosed by a turn of the coil's spiral in meters^2 
n = 300.0      #n is the number of spires of the coil 

ix = magDipole[0]/(n * s)    #current needed to push through magnetorquer on x-axis
 
#not needed ?? -----------------
  #magnetorquer for x axis 
  #magnettorquerX = [mx] 
  #mx = ix * 
 
  #magnetorquer for Y axis 
  #magnettorquerY = [my]
 
  #magnetorquer for Z axis 
  #magnettorquerZ = [mz] 
 #------------------------------
 
#this section calculates the control torque 

torque = cross(magDipole, bVec)
print("This is the control torque generated by the magnetorquers:   ", torque)



 
 
 
 
